(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{168:function(r,e,t){"use strict";t.r(e);var n=t(0),s=Object(n.a)({},(function(){var r=this.$createElement;this._self._c;return this._m(0)}),[function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"docker入门"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker入门"}},[r._v("#")]),r._v(" Docker入门")]),r._v(" "),t("pre",[t("code",[r._v("本文意在帮助读者初步了解docker,并快速部署自己的应用\n")])]),r._v(" "),t("h2",{attrs:{id:"一、docker简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、docker简介"}},[r._v("#")]),r._v(" 一、docker简介")]),r._v(" "),t("pre",[t("code",[r._v("docker 主要能解决 环境一致性、系统资源分配、服务节点扩容 问题，主要体现为\n")])]),r._v(" "),t("p",[t("strong",[r._v("集装箱")]),r._v("：保证所有的运行环境、配置文件等齐全，确保程序运营不会缺东西\n"),t("strong",[r._v("标准化")]),r._v("：运输、存储、API接口的一直性，均为标准docker命令\n"),t("strong",[r._v("隔离性")]),r._v("：运用LXC(轻量级的容器虚拟化技术).最大效率的隔离了进程和资源")]),r._v(" "),t("h2",{attrs:{id:"二、docker结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、docker结构"}},[r._v("#")]),r._v(" 二、docker结构")]),r._v(" "),t("pre",[t("code",[r._v("docker运行程序的过程就是去仓库把镜像拉到本地,然后用一条命令把镜像运行起来变成容器.\n")])]),r._v(" "),t("p",[t("strong",[r._v("build")]),r._v(":构建,就是构建镜像.\n"),t("strong",[r._v("ship")]),r._v(":运输,运输镜像,从仓库和主机运输.\n"),t("strong",[r._v("run")]),r._v(":运行的镜像就是一个容器.\nbuild,ship,run和镜像,仓库,容器是一一对应的.")])])}],!1,null,null,null);e.default=s.exports}}]);